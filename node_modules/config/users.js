var crypto = require('crypto');
var rand = require('csprng');
var mongoose = require('mongoose');
var user = require('config/usermodel');
var group = require('config/groupmodel');
exports.login = function(email, password, callback) {

    user.find({
        email: email
    }, function(err, users) {

        if (users.length != 0) {

            var temp = users[0].salt;
            var hash_db = users[0].hashed_password;
            var id = users[0].token;
            var newpass = temp + password;
            var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");

            if (hash_db == hashed_password) {

                callback({
                    'response': "Login Sucess",
                    'res': true,
                    'token': id,
                    'user': users[0]
                });

            } else {

                callback({
                    'response': "Invalid Password",
                    'res': false
                });

            }
        } else {

            callback({
                'response': "User does not exist",
                'res': false
            });

        }
    });
}


exports.register = function(firstName, lastName, email, password, callback) {

    var x = email;
    console.log("x" + x);
    if ((x.indexOf("@") != x.length)) {
        if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && password.length > 4 && password.match(/[0-9]/) && password.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)) {

            var temp = rand(160, 36);
            var newpass = temp + password;
            var token = crypto.createHash('sha512').update(email + rand).digest("hex");
            var hashed_password = crypto.createHash('sha512').update(newpass).digest("hex");
            var groups = [];
            var events = [];
            var groupsName=[];
            var adminGroups = [];
            var adminGroupsName=[];
            var groupRequests=[];
            var groupRequestsName=[];
            var adminEvents = [];
            var adminEventsName=[];
            var eventRequests=[];

            var newuser = new user({
                token: token,
                firstName: firstName,
                lastName: lastName,
                userName:firstName+" "+lastName,
                email: email,
                groups: groups,
                groupsName:groupsName,
                adminGroups: adminGroups,
                adminGroupsName:adminGroupsName,
                groupRequests:groupRequests,
                groupRequestsName:groupRequestsName,
                hashed_password: hashed_password,
                salt: temp
            });

            user.find({
                email: email
            }, function(err, users) {

                var len = users.length;

                if (len == 0) {
                    newuser.save(function(err) {

                        callback({
                            'response': "Sucessfully Registered",
                            'res': true
                        });

                    });
                } else {

                    callback({
                        'response': "Email already Registered",
                        'res': false
                    });

                }
            });
        } else {

            callback({
                'response': "Password Weak",
                'res': false
            });

        }
    } else {

        callback({
            'response': "Email Not Valid",
            'res': false
        });

    }
}

exports.refreshUser = function(userEmail,callback) {

    user.find({
      email:userEmail
    }, function(err, users) {
        if (users.length > 0) {
           callback({
                'response': " Refreshed User Data",
                'user': users[0]
            });
        }
    });
}

exports.getall = function(callback) {

    user.find({}, function(err, users) {
        if (users.length > 0) {
            callback({
                'response': " Get Success",
                'users': users
            });
        }
    });
}